#!/usr/bin/python

import smbus
import math

# Power management registers
power_mgmt_1 = 0x6b
power_mgmt_2 = 0x6c

def read_byte(adr):
    return bus.read_byte_data(address, adr)

def read_word(adr):
    high = bus.read_byte_data(address, adr)
    low = bus.read_byte_data(address, adr+1)
    val = (high << 8) + low
    return val

def read_word_2c(adr):
    val = read_word(adr)
    if (val >= 0x8000):
        return -((65535 - val) + 1)
    else:
        return val

def dist(a,b):
    return math.sqrt((a*a)+(b*b))

def get_y_rotation(x,y,z):
    radians = math.atan2(x, dist(y,z))
    return -math.degrees(radians)

def get_x_rotation(x,y,z):
    radians = math.atan2(y, dist(x,z))
    return math.degrees(radians)

def get_movement(x,y,z):
    mag = math.sqrt(x*x +y*y)
    theta = math.degrees(math.atan(y/x))
    if mag < 0.1:
        return "Still"
    elif math.fabs(theta) < 60:
        return "Moving right"
    elif math.fabs(theta) >= 120 and math.fabs(theta) < 240:
        return "Moving left"
    elif theta >= 60 and theta < 120:
        return "Moving forward"
    elif theta >= 240 and theta < 300:
        return "Moving backwards"
    else:
        return "NaN"

bus = smbus.SMBus(1) # or bus = smbus.SMBus(1) for Revision 2 boards
address = 0x68       # This is the address value read via the i2cdetect command

# Now wake the 6050 up as it starts in sleep mode
bus.write_byte_data(address, power_mgmt_1, 0)

for x in range(0, 100):
    gyro_xout = read_word_2c(0x43)
    gyro_yout = read_word_2c(0x45)
    gyro_zout = read_word_2c(0x47)
    # print("gx, gy, gz: ", gyro_xout, "  ", gyro_yout, "  ", gyro_zout)
    accel_xout = read_word_2c(0x3b)
    accel_yout = read_word_2c(0x3d)
    accel_zout = read_word_2c(0x3f)
    axs = accel_xout / 16384.0
    ays = accel_yout / 16384.0
    azs = accel_zout / 16384.0
    # print("ax, ay, az (scaled): ", axs, "  ", ays, "  ", azs)
    print("x_rot, y_rot: " , '{0:.2f}'.format(get_x_rotation(axs, ays, azs)), get_y_rotation(axs, ays, azs))
    print("Moving: " , get_movement(axs, ays, azs))
    import time
   # time.sleep (1);
    
